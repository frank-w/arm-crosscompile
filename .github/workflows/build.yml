name: CI-build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
    - '*main'
    - '*-ci'
    paths-ignore:
      - '.github/**'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    #runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Install depencies
        run: |
          sudo apt update
          sudo apt install binfmt-support qemu-user-static

#      - uses: actions/download-artifact@v2
#        with:
#          name: bullseye-chroot

      - name: setup environment
        env:
          ARCH: armhf
          DEBIAN_RELEASE: bookworm
          #CHROOT: 'debian_${{ env.DEBIAN_RELEASE }}_${{ env.ARCH }}'
        run: |
          echo "CUR_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          echo "DEBIAN_RELEASE=${{ env.DEBIAN_RELEASE }}" >> $GITHUB_ENV
          echo "ARCH=${{ env.ARCH }}" >> $GITHUB_ENV
          #echo "CHROOT=${{ env.CHROOT }}" >> $GITHUB_ENV
          echo "CHROOT=debian_${{ env.DEBIAN_RELEASE }}_${{ env.ARCH }}" >> $GITHUB_ENV

      - name: download and unpack chroot
        run: |
          wget -nv https://github.com/frank-w/arm-crosscompile/releases/download/CHROOT-${{ env.DEBIAN_RELEASE }}/debian_${{ env.DEBIAN_RELEASE }}_armhf.tar.gz
          wget -nv https://github.com/frank-w/arm-crosscompile/releases/download/CHROOT-${{ env.DEBIAN_RELEASE }}/debian_${{ env.DEBIAN_RELEASE }}_arm64.tar.gz
          sudo tar -xzf debian_${{ env.DEBIAN_RELEASE }}_armhf.tar.gz --strip-components=5
          sudo tar -xzf debian_${{ env.DEBIAN_RELEASE }}_arm64.tar.gz --strip-components=5
          ls -lh

      - name: build hostapd/wpa_supplicant (armhf)
#        env:
#          ARCH: armhf
#          CHROOT: debian_${{ env.DEBIAN_RELEASE }}_${{ env.ARCH }}
        run: |
          sudo cp build_hostapd.sh ${{ env.CHROOT }}/usr/local/bin/
          sudo chroot ${{ env.CHROOT }} /usr/local/bin/build_hostapd.sh
          cp ${{ env.CHROOT }}/usr/src/hostapd/hostap/hostapd/hostapd.tar.gz ./hostapd_${{ env.ARCH }}.tar.gz
          cp ${{ env.CHROOT }}/usr/src/hostapd/hostap/wpa_supplicant/wpa_supplicant ./wpa_supplicant_${{ env.ARCH }}

      - name: build iproute2 (armhf)
#        env:
#          ARCH: armhf
#          CHROOT: debian_${{ env.DEBIAN_RELEASE }}_armhf
        run: |
          sudo cp build_iproute2.sh ${{ env.CHROOT }}/usr/local/bin/
          sudo chroot ${{ env.CHROOT }} /usr/local/bin/build_iproute2.sh
          cp ${{ env.CHROOT }}/usr/src/iproute2/iproute2.tar.gz ./iproute2_${{ env.ARCH }}.tar.gz

      - name: change arch in environment
        env:
          ARCH: arm64
        run: |
          echo "ARCH=${{ env.ARCH }}" >> $GITHUB_ENV
          echo "CHROOT=debian_${{ env.DEBIAN_RELEASE }}_${{ env.ARCH }}" >> $GITHUB_ENV

      - name: build hostapd/wpa_supplicant (arm64)
#        env:
#          ARCH: arm64
#          CHROOT: debian_${{ env.DEBIAN_RELEASE }}_${{ env.ARCH }}
        run: |
          sudo cp build_hostapd.sh ${{ env.CHROOT }}/usr/local/bin/
          sudo chroot ${{ env.CHROOT }} /usr/local/bin/build_hostapd.sh
          cp ${{ env.CHROOT }}/usr/src/hostapd/hostap/hostapd/hostapd.tar.gz ./hostapd_${{ env.ARCH }}.tar.gz
          cp ${{ env.CHROOT }}/usr/src/hostapd/hostap/wpa_supplicant/wpa_supplicant ./wpa_supplicant_${{ env.ARCH }}

      - name: build iproute2 (arm64)
        run: |
          sudo cp build_iproute2.sh ${{ env.CHROOT }}/usr/local/bin/
          sudo chroot ${{ env.CHROOT }} /usr/local/bin/build_iproute2.sh
          cp ${{ env.CHROOT }}/usr/src/iproute2/iproute2.tar.gz ./iproute2_${{ env.ARCH }}.tar.gz

      - name: build iperf3 (arm64)
        run: |
          sudo cp build_iperf3.sh ${{ env.CHROOT }}/usr/local/bin/
          sudo chroot ${{ env.CHROOT }} /usr/local/bin/build_iperf3.sh
          cp ${{ env.CHROOT }}/usr/src/iperf/iperf.tar.gz ./iperf_${{ env.ARCH }}.tar.gz

      - name: build swconfig (arm64)
        run: |
          sudo cp swconfig_includes/switch.h ${{ env.CHROOT }}/usr/include/linux/
          sudo cp build_swconfig.sh ${{ env.CHROOT }}/usr/local/bin/
          sudo chroot ${{ env.CHROOT }} /usr/local/bin/build_swconfig.sh
          cp ${{ env.CHROOT }}/usr/src/swconfig/swconfig ./swconfig_${{ env.ARCH }}

      - name: Upload binaries to release
#        if: endsWith(github.ref,'-main') 
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
#          body: ${{ github.sha }}
          tag_name: "CI-BUILD-${{ env.CUR_DATE }}"
          target_commitish: ${{ github.sha }}
          files: |
             hostapd_*.tar.gz
             wpa_supplicant_*
             iproute2_*.tar.gz
             swconfig_*
